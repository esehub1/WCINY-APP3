/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { animate, state, style, transition, trigger } from '@angular/animations';
import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Input, Renderer2 } from '@angular/core';
var TooltipBox = /** @class */ (function () {
    function TooltipBox(elementRef, rnd) {
        var _this = this;
        this.elementRef = elementRef;
        this.rnd = rnd;
        this.fadeState = 'invisible';
        this.role = 'status';
        this.tooltipStyles = {};
        this.init = new Promise((/**
         * @param {?} resolve
         * @return {?}
         */
        function (resolve) {
            _this.initResolve = resolve;
        }));
    }
    Object.defineProperty(TooltipBox.prototype, "arrow", {
        set: /**
         * @param {?} side
         * @return {?}
         */
        function (side) {
            this.rnd.setAttribute(this.getNativeElement(), 'class', 'has-arrow ' + 'arrow-' + side);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TooltipBox.prototype, "posTop", {
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this.rnd.setStyle(this.getNativeElement(), 'top', val + 'px');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TooltipBox.prototype, "posLeft", {
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this.rnd.setStyle(this.getNativeElement(), 'left', val + 'px');
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TooltipBox.prototype.getNativeElement = /**
     * @return {?}
     */
    function () {
        return this.elementRef.nativeElement;
    };
    /**
     * @return {?}
     */
    TooltipBox.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.initResolve();
    };
    TooltipBox.decorators = [
        { type: Component, args: [{
                    selector: 'tooltip-box',
                    template: "<div class=\"tooltip-box\"\n     [attr.aria-role]=\"role\"\n     [ngStyle]=\"tooltipStyles\">\n  <div *ngIf=\"tooltipHtml; else txt\" [innerHTML]=\"tooltipHtml\"></div>\n\n  <ng-template #txt><div [innerHtml]=\"text\"></div></ng-template>\n</div>\n",
                    animations: [
                        trigger('fade', [
                            state('visible', style({ opacity: 1 })),
                            state('invisible', style({ opacity: 0 })),
                            transition('visible <=> invisible', animate('300ms linear'))
                        ])
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host{background-color:rgba(0,0,0,.8);color:#fff;display:inline-block;position:fixed;padding:15px 25px;font-size:15px;z-index:3}:host.has-arrow:before{content:\"\";border:5px solid transparent;position:absolute;width:0;height:0}:host.has-arrow.arrow-top:before{border-bottom:5px solid rgba(0,0,0,.8);top:-10px}:host.has-arrow.arrow-left:before{border-right:5px solid rgba(0,0,0,.8);left:-10px}:host.has-arrow.arrow-right:before{border-left:5px solid rgba(0,0,0,.8);right:-10px}:host.has-arrow.arrow-bottom:before{border-top:5px solid rgba(0,0,0,.8);bottom:-10px}"]
                }] }
    ];
    /** @nocollapse */
    TooltipBox.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    TooltipBox.propDecorators = {
        fadeState: [{ type: HostBinding, args: ['@fade',] }],
        role: [{ type: Input }],
        text: [{ type: Input }],
        tooltipHtml: [{ type: Input }],
        tooltipStyles: [{ type: Input }],
        arrow: [{ type: Input }],
        posTop: [{ type: Input }],
        posLeft: [{ type: Input }]
    };
    return TooltipBox;
}());
export { TooltipBox };
if (false) {
    /** @type {?} */
    TooltipBox.prototype.fadeState;
    /** @type {?} */
    TooltipBox.prototype.role;
    /** @type {?} */
    TooltipBox.prototype.text;
    /** @type {?} */
    TooltipBox.prototype.tooltipHtml;
    /** @type {?} */
    TooltipBox.prototype.tooltipStyles;
    /**
     * @type {?}
     * @private
     */
    TooltipBox.prototype.initResolve;
    /** @type {?} */
    TooltipBox.prototype.init;
    /** @type {?} */
    TooltipBox.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    TooltipBox.prototype.rnd;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC1ib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vaW9uaWM0LXRvb2x0aXBzLyIsInNvdXJjZXMiOlsiY29tcG9uZW50cy90b29sdGlwLWJveC90b29sdGlwLWJveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakYsT0FBTyxFQUVMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsVUFBVSxFQUNWLFdBQVcsRUFDWCxLQUFLLEVBQ0wsU0FBUyxFQUNWLE1BQU0sZUFBZSxDQUFDO0FBRXZCO0lBc0RFLG9CQUNTLFVBQXFCLEVBQ3BCLEdBQWE7UUFGdkIsaUJBU0M7UUFSUSxlQUFVLEdBQVYsVUFBVSxDQUFXO1FBQ3BCLFFBQUcsR0FBSCxHQUFHLENBQVU7UUF4Q0QsY0FBUyxHQUFVLFdBQVcsQ0FBQztRQUU1QyxTQUFJLEdBQVUsUUFBUSxDQUFDO1FBR3ZCLGtCQUFhLEdBQTRCLEVBQUUsQ0FBQztRQXFDbkQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLE9BQU87Ozs7UUFDckIsVUFBQyxPQUFPO1lBQ04sS0FBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUM7UUFDL0IsQ0FBQyxFQUNBLENBQUM7SUFDSixDQUFDO0lBeENELHNCQUNJLDZCQUFLOzs7OztRQURULFVBQ1UsSUFBVztZQUNuQixJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FDbkIsSUFBSSxDQUFDLGdCQUFnQixFQUFFLEVBQ3ZCLE9BQU8sRUFDUCxZQUFZLEdBQUcsUUFBUSxHQUFHLElBQUksQ0FDL0IsQ0FBQztRQUNKLENBQUM7OztPQUFBO0lBRUQsc0JBQ0ksOEJBQU07Ozs7O1FBRFYsVUFDVyxHQUFVO1lBQ25CLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUNmLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxFQUN2QixLQUFLLEVBQ0wsR0FBRyxHQUFHLElBQUksQ0FDWCxDQUFDO1FBQ0osQ0FBQzs7O09BQUE7SUFFRCxzQkFDSSwrQkFBTzs7Ozs7UUFEWCxVQUNZLEdBQVU7WUFDcEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQ2YsSUFBSSxDQUFDLGdCQUFnQixFQUFFLEVBQ3ZCLE1BQU0sRUFDTixHQUFHLEdBQUcsSUFBSSxDQUNYLENBQUM7UUFDSixDQUFDOzs7T0FBQTs7OztJQWlCRCxxQ0FBZ0I7OztJQUFoQjtRQUNFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7SUFDdkMsQ0FBQzs7OztJQUVELG9DQUFlOzs7SUFBZjtRQUNFLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDOztnQkF2RUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBSyxhQUFhO29CQUMxQixvUUFBeUM7b0JBSXpDLFVBQVUsRUFBRTt3QkFDVixPQUFPLENBQUMsTUFBTSxFQUFFOzRCQUNkLEtBQUssQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7NEJBQ3ZDLEtBQUssQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7NEJBQ3pDLFVBQVUsQ0FBQyx1QkFBdUIsRUFBRSxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7eUJBQzdELENBQUM7cUJBQ0g7b0JBQ0QsZUFBZSxFQUFDLHVCQUF1QixDQUFDLE1BQU07O2lCQUMvQzs7OztnQkFwQkMsVUFBVTtnQkFHVixTQUFTOzs7NEJBbUJSLFdBQVcsU0FBQyxPQUFPO3VCQUVuQixLQUFLO3VCQUNMLEtBQUs7OEJBQ0wsS0FBSztnQ0FDTCxLQUFLO3dCQUVMLEtBQUs7eUJBU0wsS0FBSzswQkFTTCxLQUFLOztJQStCUixpQkFBQztDQUFBLEFBeEVELElBd0VDO1NBekRZLFVBQVU7OztJQUNyQiwrQkFBcUQ7O0lBRXJELDBCQUFnQzs7SUFDaEMsMEJBQXFCOztJQUNyQixpQ0FBNEI7O0lBQzVCLG1DQUFxRDs7Ozs7SUE2QnJELGlDQUE2Qjs7SUFFN0IsMEJBQTBCOztJQUd4QixnQ0FBNEI7Ozs7O0lBQzVCLHlCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFuaW1hdGUsIHN0YXRlLCBzdHlsZSwgdHJhbnNpdGlvbiwgdHJpZ2dlciB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHtcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgSG9zdEJpbmRpbmcsXG4gIElucHV0LFxuICBSZW5kZXJlcjJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogICAgJ3Rvb2x0aXAtYm94JyxcbiAgdGVtcGxhdGVVcmw6ICd0b29sdGlwLWJveC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogW1xuICAgICd0b29sdGlwLWJveC5jb21wb25lbnQuc2NzcydcbiAgXSxcbiAgYW5pbWF0aW9uczogW1xuICAgIHRyaWdnZXIoJ2ZhZGUnLCBbXG4gICAgICBzdGF0ZSgndmlzaWJsZScsIHN0eWxlKHsgb3BhY2l0eTogMSB9KSksXG4gICAgICBzdGF0ZSgnaW52aXNpYmxlJywgc3R5bGUoeyBvcGFjaXR5OiAwIH0pKSxcbiAgICAgIHRyYW5zaXRpb24oJ3Zpc2libGUgPD0+IGludmlzaWJsZScsIGFuaW1hdGUoJzMwMG1zIGxpbmVhcicpKVxuICAgIF0pXG4gIF0sXG4gIGNoYW5nZURldGVjdGlvbjpDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgVG9vbHRpcEJveCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBASG9zdEJpbmRpbmcoJ0BmYWRlJykgZmFkZVN0YXRlOnN0cmluZyA9ICdpbnZpc2libGUnO1xuXG4gIEBJbnB1dCgpIHJvbGU6c3RyaW5nID0gJ3N0YXR1cyc7XG4gIEBJbnB1dCgpIHRleHQ6c3RyaW5nO1xuICBASW5wdXQoKSB0b29sdGlwSHRtbDpzdHJpbmc7XG4gIEBJbnB1dCgpIHRvb2x0aXBTdHlsZXM6eyBba2V5OnN0cmluZ106c3RyaW5nOyB9ID0ge307XG5cbiAgQElucHV0KClcbiAgc2V0IGFycm93KHNpZGU6c3RyaW5nKSB7XG4gICAgdGhpcy5ybmQuc2V0QXR0cmlidXRlKFxuICAgICAgdGhpcy5nZXROYXRpdmVFbGVtZW50KCksXG4gICAgICAnY2xhc3MnLFxuICAgICAgJ2hhcy1hcnJvdyAnICsgJ2Fycm93LScgKyBzaWRlXG4gICAgKTtcbiAgfVxuXG4gIEBJbnB1dCgpXG4gIHNldCBwb3NUb3AodmFsOm51bWJlcikge1xuICAgIHRoaXMucm5kLnNldFN0eWxlKFxuICAgICAgdGhpcy5nZXROYXRpdmVFbGVtZW50KCksXG4gICAgICAndG9wJyxcbiAgICAgIHZhbCArICdweCdcbiAgICApO1xuICB9XG5cbiAgQElucHV0KClcbiAgc2V0IHBvc0xlZnQodmFsOm51bWJlcikge1xuICAgIHRoaXMucm5kLnNldFN0eWxlKFxuICAgICAgdGhpcy5nZXROYXRpdmVFbGVtZW50KCksXG4gICAgICAnbGVmdCcsXG4gICAgICB2YWwgKyAncHgnXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgaW5pdFJlc29sdmU6RnVuY3Rpb247XG5cbiAgcHVibGljIGluaXQ6UHJvbWlzZTx2b2lkPjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgZWxlbWVudFJlZjpFbGVtZW50UmVmLFxuICAgIHByaXZhdGUgcm5kOlJlbmRlcmVyMlxuICApIHtcbiAgICB0aGlzLmluaXQgPSBuZXcgUHJvbWlzZTx2b2lkPihcbiAgICAgIChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHRoaXMuaW5pdFJlc29sdmUgPSByZXNvbHZlO1xuICAgIH1cbiAgICApO1xuICB9XG5cbiAgZ2V0TmF0aXZlRWxlbWVudCgpOkhUTUxFbGVtZW50IHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gIH1cblxuICBuZ0FmdGVyVmlld0luaXQoKTp2b2lkIHtcbiAgICB0aGlzLmluaXRSZXNvbHZlKCk7XG4gIH1cbn1cbiJdfQ==