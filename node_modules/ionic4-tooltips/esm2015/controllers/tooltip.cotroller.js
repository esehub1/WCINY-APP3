/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class TooltipController {
    constructor() {
        this.allowMultiple = true;
        this.activeTooltips = [];
    }
    /**
     * @param {?} instance
     * @return {?}
     */
    addTooltip(instance) {
        if (instance.hideOthers || !this.allowMultiple && this.activeTooltips.length > 0) {
            this.hideAll();
        }
        this.activeTooltips.push(instance);
    }
    /**
     * @param {?} instance
     * @return {?}
     */
    removeTooltip(instance) {
        this.activeTooltips.splice(this.activeTooltips.indexOf(instance), 1);
    }
    /**
     * @return {?}
     */
    hideAll() {
        this.activeTooltips.forEach((/**
         * @param {?} tooltip
         * @return {?}
         */
        (tooltip) => {
            tooltip.removeTooltip();
        }));
    }
}
TooltipController.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
/** @nocollapse */ TooltipController.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function TooltipController_Factory() { return new TooltipController(); }, token: TooltipController, providedIn: "root" });
if (false) {
    /** @type {?} */
    TooltipController.prototype.allowMultiple;
    /** @type {?} */
    TooltipController.prototype.activeTooltips;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5jb3Ryb2xsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pb25pYzQtdG9vbHRpcHMvIiwic291cmNlcyI6WyJjb250cm9sbGVycy90b29sdGlwLmNvdHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7QUFNekMsTUFBTSxPQUFPLGlCQUFpQjtJQUg5QjtRQUlTLGtCQUFhLEdBQVcsSUFBSSxDQUFDO1FBQzdCLG1CQUFjLEdBQXNCLEVBQUUsQ0FBQztLQXFCL0M7Ozs7O0lBbkJDLFVBQVUsQ0FBQyxRQUF5QjtRQUNsQyxJQUFJLFFBQVEsQ0FBQyxVQUFVLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNoRixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDaEI7UUFFRCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyQyxDQUFDOzs7OztJQUVELGFBQWEsQ0FBQyxRQUF5QjtRQUNyQyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDOzs7O0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTzs7OztRQUN6QixDQUFDLE9BQXdCLEVBQUUsRUFBRTtZQUMzQixPQUFPLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDMUIsQ0FBQyxFQUNGLENBQUM7SUFDSixDQUFDOzs7WUF6QkYsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COzs7OztJQUVDLDBDQUFvQzs7SUFDcEMsMkNBQThDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7VG9vbHRpcERpcmVjdGl2ZX0gZnJvbSAnLi4vZGlyZWN0aXZlcy90b29sdGlwLmRpcmVjdGl2ZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBUb29sdGlwQ29udHJvbGxlciB7XG4gIHB1YmxpYyBhbGxvd011bHRpcGxlOmJvb2xlYW4gPSB0cnVlO1xuICBwdWJsaWMgYWN0aXZlVG9vbHRpcHM6VG9vbHRpcERpcmVjdGl2ZVtdID0gW107XG5cbiAgYWRkVG9vbHRpcChpbnN0YW5jZTpUb29sdGlwRGlyZWN0aXZlKTp2b2lkIHtcbiAgICBpZiAoaW5zdGFuY2UuaGlkZU90aGVycyB8fCAhdGhpcy5hbGxvd011bHRpcGxlICYmIHRoaXMuYWN0aXZlVG9vbHRpcHMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5oaWRlQWxsKCk7XG4gICAgfVxuXG4gICAgdGhpcy5hY3RpdmVUb29sdGlwcy5wdXNoKGluc3RhbmNlKTtcbiAgfVxuXG4gIHJlbW92ZVRvb2x0aXAoaW5zdGFuY2U6VG9vbHRpcERpcmVjdGl2ZSk6dm9pZCB7XG4gICAgdGhpcy5hY3RpdmVUb29sdGlwcy5zcGxpY2UodGhpcy5hY3RpdmVUb29sdGlwcy5pbmRleE9mKGluc3RhbmNlKSwgMSk7XG4gIH1cblxuICBoaWRlQWxsKCk6dm9pZCB7XG4gICAgdGhpcy5hY3RpdmVUb29sdGlwcy5mb3JFYWNoKFxuICAgICAgKHRvb2x0aXA6VG9vbHRpcERpcmVjdGl2ZSkgPT4ge1xuICAgICAgICB0b29sdGlwLnJlbW92ZVRvb2x0aXAoKTtcbiAgICAgIH1cbiAgICApO1xuICB9XG59XG4iXX0=