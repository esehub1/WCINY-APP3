{"version":3,"sources":["./src/app/checkin/checkin.page.html","./src/app/checkin/checkin-routing.module.ts","./src/app/checkin/checkin.module.ts","./src/app/checkin/checkin.page.scss","./src/app/checkin/checkin.page.ts"],"names":[],"mappings":"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","file":"checkin-checkin-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"winners-red\\\">\\n    <ion-text>\\n      <div class=\\\"ion-text-wrap ion-text-end ion-padding\\\">\\n        WINNERS CHAPEL INT'L <br> NEW YORK\\n      </div>\\n    </ion-text>\\n    <ion-buttons slot=\\\"start\\\" style=\\\"flex-flow: column\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button text=\\\"Back\\\" icon=\\\"caret-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <img src=\\\"assets/img/logo22.png\\\" alt=\\\"\\\" slot=\\\"end\\\" width=\\\"70vw\\\" class=\\\"ion-padding-vertical ion-padding-end\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item color=\\\"light\\\">\\n    <div class=\\\"ion-text-left\\\">\\n      <h5 style=\\\"font-weight: bold\\\">CHECK-IN FORM</h5>\\n    </div>\\n  </ion-item>\\n  <ion-list>\\n    <form [formGroup]=\\\"checkinForm\\\">\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">First Name:</ion-label>\\n            <ion-input formControlName=\\\"Fname\\\" type=\\\"text\\\"\\n                       [class.invalid]=\\\"!checkinForm.controls.Fname.valid && (checkinForm.controls.Fname.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item\\n                  *ngIf=\\\"!checkinForm.controls.Fname.valid  && (checkinForm.controls.Fname.dirty || submitAttempt)\\\">\\n            <p>Please enter a valid name.</p>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Last Name:</ion-label>\\n            <ion-input formControlName=\\\"Lname\\\" type=\\\"text\\\"\\n                       [class.invalid]=\\\"!checkinForm.controls.Lname.valid && (checkinForm.controls.Lname.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item\\n                  *ngIf=\\\"!checkinForm.controls.Lname.valid  && (checkinForm.controls.Lname.dirty || submitAttempt)\\\">\\n            <p>Please enter a valid name.</p>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Telephone:</ion-label>\\n            <ion-input formControlName=\\\"Phone\\\" type=\\\"tel\\\"\\n                       [brmasker]=\\\"{mask: '(000)-000-0000', type:'num', len:14}\\\"\\n                       [class.invalid]=\\\"!checkinForm.controls.Phone.valid && (checkinForm.controls.Phone.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item\\n                  *ngIf=\\\"!checkinForm.controls.Phone.valid  && (checkinForm.controls.Phone.dirty || submitAttempt)\\\">\\n            <p>Please enter a valid phone number.</p>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Email:</ion-label>\\n            <ion-input formControlName=\\\"Email\\\" type=\\\"email\\\"\\n                       [class.invalid]=\\\"!checkinForm.controls.Email.valid && (checkinForm.controls.Email.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item\\n                  *ngIf=\\\"!checkinForm.controls.Email.valid  && (checkinForm.controls.Email.dirty || submitAttempt)\\\">\\n            <p>Please enter a valid email address.</p>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Address:</ion-label>\\n        <ion-input formControlName=\\\"Address\\\" type=\\\"text\\\"\\n                   [class.invalid]=\\\"!checkinForm.controls.Address.valid && (checkinForm.controls.Address.dirty || submitAttempt)\\\"></ion-input>\\n      </ion-item>\\n      <ion-item\\n              *ngIf=\\\"!checkinForm.controls.Address.valid  && (checkinForm.controls.Address.dirty || submitAttempt)\\\">\\n        <p>Please enter a valid address.</p>\\n      </ion-item>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">City:</ion-label>\\n            <ion-input formControlName=\\\"City\\\" type=\\\"text\\\"\\n                       [class.invalid]=\\\"!checkinForm.controls.City.valid && (checkinForm.controls.City.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item\\n                  *ngIf=\\\"!checkinForm.controls.City.valid  && (checkinForm.controls.City.dirty || submitAttempt)\\\">\\n            <p>Please enter a valid city.</p>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">State:</ion-label>\\n            <ion-input formControlName=\\\"State\\\" type=\\\"text\\\"\\n                       [class.invalid]=\\\"!checkinForm.controls.State.valid && (checkinForm.controls.State.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item\\n                  *ngIf=\\\"!checkinForm.controls.State.valid  && (checkinForm.controls.State.dirty || submitAttempt)\\\">\\n            <p>Please enter a valid state / province.</p>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Zip code:</ion-label>\\n            <ion-input formControlName=\\\"Zip\\\" type=\\\"text\\\"\\n                       [class.invalid]=\\\"!checkinForm.controls.Zip.valid && (checkinForm.controls.Zip.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item\\n                  *ngIf=\\\"!checkinForm.controls.Zip.valid  && (checkinForm.controls.Zip.dirty || submitAttempt)\\\">\\n            <p>Please enter a valid zip code.</p>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Country:</ion-label>\\n            <ion-input formControlName=\\\"Country\\\" type=\\\"text\\\"\\n                       [class.invalid]=\\\"!checkinForm.controls.Country.valid && (checkinForm.controls.Country.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item\\n                  *ngIf=\\\"!checkinForm.controls.Country.valid  && (checkinForm.controls.Country.dirty || submitAttempt)\\\">\\n            <p>Please enter a country.</p>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" color=\\\"primary\\\" class=\\\"ion-text-wrap\\\"\\n                   style=\\\"margin-bottom: 10px\\\">First time worshipping with us?\\n        </ion-label>\\n        <ion-select formControlName=\\\"Firsttimer\\\" interface=\\\"action-sheet\\\">\\n          <ion-select-option value=\\\"Yes\\\">Yes</ion-select-option>\\n          <ion-select-option value=\\\"No\\\">No</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <ion-item\\n              *ngIf=\\\"!checkinForm.controls.Firsttimer.valid  && (checkinForm.controls.Firsttimer.dirty || submitAttempt)\\\">\\n        <p>Please select an option.</p>\\n      </ion-item>\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\" class=\\\"ion-text-wrap\\\"\\n                       style=\\\"margin-bottom: 10px\\\">How many people are watching including yourself?\\n            </ion-label>\\n            <ion-select formControlName=\\\"People\\\" interface=\\\"action-sheet\\\">\\n              <ion-select-option value=\\\"Male\\\">Male</ion-select-option>\\n              <ion-select-option value=\\\"Female\\\">Female</ion-select-option>\\n            </ion-select>\\n          </ion-item>\\n          <ion-item\\n                  *ngIf=\\\"!checkinForm.controls.People.valid  && (checkinForm.controls.People.dirty || submitAttempt)\\\">\\n            <p>Please select an option.</p>\\n          </ion-item>\\n      <section>\\n        <ion-button color=\\\"winners-red\\\" expand=\\\"block\\\" slot=\\\"start\\\" (click)=\\\"save()\\\">\\n          Submit\\n        </ion-button>\\n      </section>\\n    </form>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CheckinPage } from './checkin.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CheckinPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CheckinPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CheckinPageRoutingModule } from './checkin-routing.module';\n\nimport { CheckinPage } from './checkin.page';\nimport {BrMaskerModule} from \"br-mask\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        CheckinPageRoutingModule,\n        ReactiveFormsModule,\n        BrMaskerModule\n    ],\n  declarations: [CheckinPage]\n})\nexport class CheckinPageModule {}\n","export default \"p {\\n  font-size: 0.8em;\\n  color: #ea6153;\\n}\\n\\n.swiper-slide {\\n  display: block;\\n}\\n\\nion-label, .select-text {\\n  margin-left: 10px;\\n}\\n\\nion-input, ion-select, ion-textarea {\\n  padding: 5px 10px;\\n}\\n\\n.invalid {\\n  border: 1px solid #ea6153;\\n}\\n\\nsection {\\n  margin-top: 1em;\\n  margin-bottom: 2.5em;\\n}\\n\\nsection:not(.full-width),\\n.full-width > header {\\n  padding: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iYWJhdHVuZGUvRG9jdW1lbnRzL21vYmlsZS93Y2lueS9zcmMvYXBwL2NoZWNraW4vY2hlY2tpbi5wYWdlLnNjc3MiLCJzcmMvYXBwL2NoZWNraW4vY2hlY2tpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLGNBQUE7QUNDRjs7QURFQTtFQUNFLGNBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0FDQ0Y7O0FERUE7RUFFRSxpQkFBQTtBQ0FGOztBREdBO0VBQ0UseUJBQUE7QUNBRjs7QURFQTtFQUNFLGVBQUE7RUFDQSxvQkFBQTtBQ0NGOztBREVBOztFQUVFLGVBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2NoZWNraW4vY2hlY2tpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgY29sb3I6ICNlYTYxNTM7XG59XG5cbi5zd2lwZXItc2xpZGUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuaW9uLWxhYmVsLCAuc2VsZWN0LXRleHQge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuaW9uLWlucHV0LCBpb24tc2VsZWN0LCBpb24tdGV4dGFyZWEge1xuICAvL2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xufVxuXG4uaW52YWxpZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlYTYxNTM7XG59XG5zZWN0aW9uIHtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAyLjVlbTtcbn1cblxuc2VjdGlvbjpub3QoLmZ1bGwtd2lkdGgpLFxuLmZ1bGwtd2lkdGggPiBoZWFkZXIge1xuICBwYWRkaW5nOiAwIDEwcHg7XG59XG4iLCJwIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgY29sb3I6ICNlYTYxNTM7XG59XG5cbi5zd2lwZXItc2xpZGUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuaW9uLWxhYmVsLCAuc2VsZWN0LXRleHQge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuaW9uLWlucHV0LCBpb24tc2VsZWN0LCBpb24tdGV4dGFyZWEge1xuICBwYWRkaW5nOiA1cHggMTBweDtcbn1cblxuLmludmFsaWQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZWE2MTUzO1xufVxuXG5zZWN0aW9uIHtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAyLjVlbTtcbn1cblxuc2VjdGlvbjpub3QoLmZ1bGwtd2lkdGgpLFxuLmZ1bGwtd2lkdGggPiBoZWFkZXIge1xuICBwYWRkaW5nOiAwIDEwcHg7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {ToastController} from \"@ionic/angular\";\nimport {DataService} from \"../services/data.service\";\n\n@Component({\n  selector: 'app-checkin',\n  templateUrl: './checkin.page.html',\n  styleUrls: ['./checkin.page.scss'],\n})\nexport class CheckinPage implements OnInit {\n  checkinForm: FormGroup;\n  submitAttempt: boolean = false;\n\n  constructor(private  nCtrl:  Router, private toastCtrl: ToastController,\n              private apiCall: DataService, public formBuilder: FormBuilder) { }\n\n  save(){\n    this.submitAttempt = true;\n    if(!this.checkinForm.valid){\n      console.log(\"INVALID Check In FORM!\")\n    }else {\n      console.log(this.checkinForm.value);\n      let postData = this.checkinForm.value;\n      postData.opt = 'checkin';\n      /*      this.presentToast('Prayer request successfully submitted');*/\n      // submit form details add addItem(userId)\n      this.apiCall.sendData('post/nubia/save', postData, true).subscribe(\n          data => {\n            console.log(data);\n            if(data['status'] === 'ko'){\n              this.presentToast('There was a problem with your submission: '+data['error_description'] );\n            }else{\n              this.presentToast('Check-In Form successfully submitted');\n              this.checkinForm.reset();\n            }\n          },\n          err => this.presentToast('There was an error with your Winners Care Program submission: '+err),\n          () => console.log(\"Winners Care Program submission Completed\")\n      );\n    }\n  }\n\n  async presentToast(msg) {\n\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 3000,\n      position: 'middle'\n    });\n\n    await toast.present();\n    toast.onDidDismiss().then((val) => {\n      console.log('Toast Dismissed '+ val);\n    });\n  }\n\n  ngOnInit() {\n    this.checkinForm = this.formBuilder.group({\n      Fname: new FormControl(\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])),\n      Lname: new FormControl(\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])),\n      Email: new FormControl(\"\",  Validators.compose([Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})'),Validators.required])),\n      Phone: new FormControl(\"\", Validators.compose([Validators.required])),\n      Address: new FormControl(\"\", Validators.compose([ Validators.required, Validators.maxLength(300)])),\n      City: new FormControl(\"\", Validators.compose([Validators.required, Validators.maxLength(30)])),\n      State: new FormControl(\"\", Validators.compose([Validators.required, Validators.maxLength(100)])),\n      Zip: new FormControl(\"\", Validators.compose([Validators.required, Validators.maxLength(10)])),\n      Country: new FormControl(\"\", Validators.compose([Validators.required, Validators.maxLength(100)])),\n      People: new FormControl(\"\", Validators.compose([Validators.required])),\n      Firsttimer: new FormControl(\"\", Validators.compose([Validators.required]))\n    });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}