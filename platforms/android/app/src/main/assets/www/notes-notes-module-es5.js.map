{"version":3,"sources":["webpack:///src/app/notes/notes.page.html","webpack:///src/app/popover/popover.page.html","webpack:///src/app/notes/notes-routing.module.ts","webpack:///src/app/notes/notes.module.ts","webpack:///src/app/notes/notes.page.scss","webpack:///src/app/notes/notes.page.ts","webpack:///src/app/popover/popover-routing.module.ts","webpack:///src/app/popover/popover.module.ts","webpack:///src/app/popover/popover.page.scss","webpack:///src/app/popover/popover.page.ts"],"names":["routes","path","component","NotesPageRoutingModule","imports","forChild","exports","NotesPageModule","declarations","NotesPage","navCtrl","apiCall","sqlite","toastCtrl","infoService","modalCtrl","socialSharing","notes","mth","dates","getMonth","slice","console","log","create","name","location","then","db","executeSql","data","showNotes","rows","length","i","push","item","e","options","message","content","subject","topic","files","url","chooserTitle","shareWithOptions","err","cssClass","componentProps","modal","present","onDidDismiss","getNotes","pageModal","dismiss","id","presentToast","msg","duration","position","toast","Date","setMonth","str","days","strDate","getUTCDay","months","getUTCDate","selector","template","PopoverPageRoutingModule","PopoverPageModule","PopoverPage","formBuilder","submitAttempt","noteForm","valid","value","postData","date","toISOString","group","compose","maxLength","pattern","required"],"mappings":"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","file":"notes-notes-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"winners-red\\\">\\n    <ion-text>\\n      <div class=\\\"ion-text-wrap ion-text-end ion-padding\\\">\\n        WINNERS CHAPEL INT'L <br> NEW YORK\\n      </div>\\n    </ion-text>\\n    <ion-buttons slot=\\\"start\\\" style=\\\"flex-flow: column\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button text=\\\"Back\\\" icon=\\\"caret-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <img src=\\\"assets/img/logo22.png\\\" alt=\\\"\\\" slot=\\\"end\\\" width=\\\"70vw\\\" class=\\\"ion-padding-vertical ion-padding-end\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list class=\\\"remove-top\\\">\\n    <img class=\\\"middlelogo\\\" src=\\\"assets/img/bible.jpg\\\" alt=\\\"\\\">\\n    <ion-item color=\\\"light\\\">\\n      <ion-button fill=\\\"clear\\\" (click)='goBack()'>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"caret-back-circle-outline\\\" color=\\\"dark\\\"></ion-icon>\\n      </ion-button>\\n      <div class=\\\"ion-text-center center-me\\\">\\n        <h4>{{getMon(dates) +' '+dates.getFullYear()}}</h4>\\n      </div>\\n      <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)='goNext()'>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"caret-forward-circle-outline\\\" color=\\\"dark\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n    <div class=\\\"ion-padding-top\\\" >\\n      <ion-button color=\\\"light\\\" expand=\\\"full\\\" (click)=\\\"addNew()\\\"> <h4>Add New Note</h4></ion-button>\\n    </div>\\n\\n    <div *ngIf=\\\"showNotes\\\">\\n      <ion-card *ngFor=\\\"let note of notes\\\">\\n\\n        <ion-item>\\n          <ion-avatar>\\n            <bj-avatar  charcount=\\\"3\\\" height=\\\"80px\\\" width=\\\"80px\\\" numdata=\\\"{{getNum(note.date)}}\\\" textdata=\\\"{{getDay(note.date)}}\\\" shape=\\\"round\\\"></bj-avatar>\\n          </ion-avatar>\\n          <h1 class=\\\"ion-margin-start ion-text-capitalize\\\">{{note.topic}}</h1>\\n        </ion-item>\\n\\n        <ion-card-content>\\n          <p>{{note.content}}</p>\\n        </ion-card-content>\\n        <ion-row>\\n          <ion-col>\\n            <ion-button color=\\\"winners-red\\\" (click)=\\\"editMe(note)\\\">\\n              <ion-icon slot=\\\"start\\\" name=\\\"create\\\"></ion-icon>\\n              <div>Edit</div>\\n            </ion-button>\\n          </ion-col>\\n          <ion-col>\\n            <ion-button color=\\\"light\\\" (click)=\\\"onItemDelete(note)\\\">\\n              <ion-icon slot=\\\"start\\\" name=\\\"remove-circle\\\"></ion-icon>\\n              <div>Delete</div>\\n            </ion-button>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-center\\\">\\n            <ion-button color=\\\"dark\\\" (click)=\\\"shareMe(note)\\\">\\n              <ion-icon slot=\\\"start\\\" name=\\\"share\\\"></ion-icon>\\n              <div>Share</div>\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card>\\n<!--      <ion-item *ngFor=\\\"let item of notes\\\" class=\\\"card item-avatar item-text-wrap\\\" (click)=\\\"itemTapped(item)\\\">\\n        &lt;!&ndash; <img ng-src=\\\"http://7thcolonnade.com/{{item.imageSmall}}\\\" alt=\\\"{{item.name}} Photo\\\"> &ndash;&gt;\\n        <ion-avatar slot=\\\"start\\\">\\n          <bj-avatar  charcount=\\\"3\\\" height=\\\"100px\\\" width=\\\"100px\\\" numdata=\\\"{{getNum(item.date)}}\\\" textdata=\\\"{{getDay(item.date)}}\\\" shape=\\\"round\\\"></bj-avatar>\\n        </ion-avatar>\\n        <ion-label>\\n          <h4>{{item.topic}}</h4>\\n       &lt;!&ndash;   <h4>When: {{doDate(item.event_date, item.event_time)  | date:'short' }}</h4>&ndash;&gt;\\n          <h4>Where: {{item.content}}</h4>\\n        </ion-label>\\n      </ion-item>-->\\n    </div>\\n    <ion-item *ngIf=\\\"!showNotes\\\"  >\\n      <h3 style=\\\"text-align:center;\\\">There are no archived notes to show</h3>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"winners-red\\\">\\n    <ion-text>\\n      <div class=\\\"ion-text-wrap ion-text-end ion-padding\\\">\\n        WINNERS CHAPEL INT'L <br> NEW YORK\\n      </div>\\n    </ion-text>\\n    <ion-buttons slot=\\\"start\\\" style=\\\"flex-flow: column\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button text=\\\"Back\\\" icon=\\\"caret-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <img src=\\\"assets/img/logo22.png\\\" alt=\\\"\\\" slot=\\\"end\\\" width=\\\"70vw\\\" class=\\\"ion-padding-vertical ion-padding-end\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n<!--  <p *ngIf=\\\"submitAttempt\\\" style=\\\"color: #ea6153;\\\">Please fill out all details accurately.</p>-->\\n  <ion-list lines=\\\"none\\\" class=\\\"remove-top\\\">\\n    <img class=\\\"middlelogo\\\" src=\\\"assets/img/bible.jpg\\\" alt=\\\"\\\">\\n    <ion-item color=\\\"light\\\">\\n      <div class=\\\"ion-text-center center-me\\\">\\n        <h4>New Note</h4>\\n      </div>\\n    </ion-item>\\n    <form [formGroup]=\\\"noteForm\\\">\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Title:</ion-label>\\n        <ion-input formControlName=\\\"topic\\\" type=\\\"text\\\" [class.invalid]=\\\"!noteForm.controls.topic.valid && (noteForm.controls.topic.dirty || submitAttempt)\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!noteForm.controls.topic.valid  && (noteForm.controls.topic.dirty || submitAttempt)\\\">\\n        <p>Please enter a valid title.</p>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Content:</ion-label>\\n        <ion-textarea formControlName=\\\"content\\\" type=\\\"text\\\" [class.invalid]=\\\"!noteForm.controls.content.valid && (noteForm.controls.content.dirty || submitAttempt)\\\"></ion-textarea>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!noteForm.controls.content.valid  && (noteForm.controls.content.dirty || submitAttempt)\\\">\\n        <p>Content can not be empty.</p>\\n      </ion-item>\\n      <ion-item [hidden]=\\\"true\\\">\\n        <ion-label position=\\\"stacked\\\">ID:</ion-label>\\n        <ion-input formControlName=\\\"id\\\" type=\\\"text\\\"></ion-input>\\n      </ion-item>\\n      <ion-item [hidden]=\\\"true\\\">\\n        <ion-label position=\\\"stacked\\\">Date Created:</ion-label>\\n        <ion-input formControlName=\\\"date\\\" type=\\\"text\\\"></ion-input>\\n      </ion-item>\\n      <ion-row>\\n        <ion-col>\\n          <section>\\n            <ion-button color=\\\"winners-red\\\" expand=\\\"block\\\" slot=\\\"start\\\" (click)=\\\"dismiss()\\\">\\n              Go Back\\n            </ion-button>\\n          </section>\\n        </ion-col>\\n        <ion-col>\\n          <section>\\n            <ion-button color=\\\"light\\\" expand=\\\"block\\\" slot=\\\"start\\\" (click)=\\\"dbSave()\\\">\\n              Save Note\\n            </ion-button>\\n          </section>\\n        </ion-col>\\n      </ion-row>\\n    </form>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotesPage } from './notes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotesPageRoutingModule } from './notes-routing.module';\n\nimport { NotesPage } from './notes.page';\nimport {SharedModule} from \"../shared.module\";\nimport { PopoverPageModule } from \"../popover/popover.module\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        NotesPageRoutingModule,\n        SharedModule,\n        PopoverPageModule\n    ],\n  declarations: [NotesPage]\n})\nexport class NotesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGVzL25vdGVzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {DataService} from \"../services/data.service\";\nimport {InfoService} from \"../services/info.service\";\nimport {SQLite, SQLiteObject} from \"@ionic-native/sqlite/ngx\";\nimport {ModalController, ToastController} from \"@ionic/angular\";\nimport { PopoverPage } from \"../popover/popover.page\";\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.page.html',\n  styleUrls: ['./notes.page.scss'],\n})\nexport class NotesPage implements OnInit {\n\n  public notes = [];\n  public dates;\n  public showNotes;\n  //selectedItem : any;\n  constructor(private navCtrl: Router, private apiCall: DataService,private sqlite: SQLite,\n              private toastCtrl: ToastController, private infoService: InfoService,\n              public modalCtrl: ModalController, private socialSharing: SocialSharing) {}\n\n  getNotes(){\n  let mth = (\"0\" + (this.dates.getMonth() + 1)).slice(-2);\n  //SELECT strftime('%s','now') SELECT id, date, topic, content FROM notes WHERE strftime('%m',date) > ? ORDER BY id DESC\n  console.log(mth);\n    this.sqlite.create({\n      name: 'wciny.db',\n      location: 'default'\n    })\n        .then((db: SQLiteObject) => {\n          db.executeSql(\"SELECT id, date, topic, content FROM notes WHERE strftime('%m',date) = ? ORDER BY id DESC\", [mth])\n              .then((data) => {\n                this.showNotes = true;//!!(Array.isArray(data.rows) && data.rows.length > 0);\n                this.notes =[];\n                if (data.rows.length >0 ){\n                  console.log(data.rows);\n                  for (let i = 0; i < data.rows.length; i++) {\n                    this.notes.push(data.rows.item(i));\n                  }\n                }\n              })\n              .catch(e => console.log(e));\n        })\n        .catch(e => console.log(e));\n  }\n\n  shareMe(item) {\n    let options = {\n      message: 'Note: \\n'+item.content,  // not supported on some apps (Facebook, Instagram)\n      subject: item.topic, // fi. for email\n      files: ['www/assets/img/logo22.png'], // an array of filenames either locally or remotely\n      url: 'https://www.winnerschapelny.org',\n      chooserTitle: 'WCINY' // Android only, you can override the default share sheet title\n    }\n\n    this.socialSharing.shareWithOptions(options).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  async editMe(item){\n    console.log(item);\n    const modal = await this.modalCtrl.create({\n      component: PopoverPage,\n      cssClass: 'my-custom-class',\n      componentProps: {\n        'item': item\n      }\n    });\n    await modal.present();\n    const { data } = await modal.onDidDismiss();\n    this.getNotes();\n    console.log(data);\n  }\n\n  async addNew(){\n    const pageModal = await this.modalCtrl.create({\n      component: PopoverPage\n    });\n\n  await pageModal.present();\n    const { data } = await pageModal.onDidDismiss();\n    this.getNotes();\n    console.log(data);\n  }\n\n  onModalDismiss(){\n    this.modalCtrl.dismiss({\n      'dismissed': true\n    });\n}\n\n  onItemDelete(item) {\n    this.sqlite.create({\n      name: 'wciny.db',\n      location: 'default'\n    })\n        .then((db: SQLiteObject) => {\n          db.executeSql('DELETE FROM notes WHERE id = ?', [item.id])\n              .then((data) => {\n                console.log(data);\n                this.getNotes();\n                this.presentToast('Note successfully deleted');\n              })\n              .catch(e => console.log(e));\n        })\n        .catch(e => console.log(e));\n  }\n\n  async presentToast(msg) {\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 3000,\n      position: 'middle'\n    });\n    await toast.present();\n  }\n\n  goNext() {\n    this.notes = [];\n    this.dates = new Date(this.dates);\n    this.dates.setMonth(this.dates.getMonth() + 1);\n    this.getNotes();\n    console.log(this.dates);\n  }\n\n  goBack() {\n    this.notes = [];\n    this.dates = new Date(this.dates);\n    this.dates.setMonth(this.dates.getMonth() - 1);\n    this.getNotes();\n  }\n\n  getDay(str){\n    let days = ['SUNDAY', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n    let strDate = (str instanceof Date)? str : new Date(str);\n    return days[strDate.getUTCDay()];\n  }\n\n  getMon(str){\n    let strDate = (str instanceof Date)? str : new Date(str);\n    let months = ['JANUARY', 'FEBRUARY', 'MARCH', 'APRIL', 'MAY', 'JUNE', 'JULY', 'AUGUST', 'SEPTEMBER', 'OCTOBER', 'NOVEMBER', 'DECEMBER'];\n    return months[strDate.getMonth()];\n  }\n\n  getNum(str){\n    let strDate = (str instanceof Date)? str : new Date(str);\n    return strDate.getUTCDate();\n  }\n\n  ngOnInit() {\n    this.dates = new Date();\n    this.getNotes();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PopoverPage } from './popover.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PopoverPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PopoverPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PopoverPageRoutingModule } from './popover-routing.module';\n\nimport { PopoverPage } from './popover.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        PopoverPageRoutingModule,\n        ReactiveFormsModule\n    ],\n  declarations: [PopoverPage]\n})\nexport class PopoverPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvcG92ZXIvcG9wb3Zlci5wYWdlLnNjc3MifQ== */\";","import {Component, Input, OnInit} from '@angular/core';\nimport { ToastController, ModalController } from \"@ionic/angular\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {SQLite, SQLiteObject} from \"@ionic-native/sqlite/ngx\";\n\n@Component({\n  selector: 'app-popover',\n  templateUrl: './popover.page.html',\n  styleUrls: ['./popover.page.scss'],\n})\nexport class PopoverPage implements OnInit {\n  noteForm: FormGroup;\n  submitAttempt: boolean = false;\n  postData;\n  @Input() item: any;\n\n  constructor(private toastCtrl: ToastController, private sqlite: SQLite,\n              private modalCtrl: ModalController,public formBuilder: FormBuilder) { }\n\n  dbSave() {\n    this.submitAttempt = true;\n\n    if (!this.noteForm.valid) {\n      console.log(\"INVALID DETAILS FORM!\")\n        console.log(this.noteForm.value);\n      //this.signupSlider.slideTo(0);\n    } else {\n      console.log(\"success!\")\n      console.log(this.noteForm.value);\n      this.postData = this.noteForm.value;\n        this.postData.date = new Date().toISOString().slice(0, 10);\n      this.sqlite.create({\n        name: 'wciny.db',\n        location: 'default'\n      })\n          .then((db: SQLiteObject) => {\n            if (this.postData.id > 0) {\n              db.executeSql('UPDATE notes SET topic =?, content=? WHERE id = ?', [this.postData.topic, this.postData.content, this.postData.id])\n                  .then(() =>{\n                    this.presentToast('Note Successfully saved').then(()=>{\n                        this.dismiss();\n                    });\n                  })\n                  .catch(e => console.log(e));\n            } else {\n              db.executeSql('INSERT INTO notes (date, topic, content) VALUES (?,?,?)', [this.postData.date, this.postData.topic, this.postData.content])\n                  .then(() => {\n                      this.presentToast('Note Successfully saved').then(()=>{\n                          this.dismiss();\n                      });\n\n                  })\n                  .catch(e => console.log(e));\n            }\n          })\n          .catch(e => {\n                console.log(e);\n              }\n          );\n    }\n  }\n\n  async presentToast(msg) {\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 3000,\n      position: 'middle'\n    });\n    await toast.present();\n  }\n\n  dismiss() {\n        this.modalCtrl.dismiss({\n            'dismissed': true,\n            'item': this.postData\n        });\n    }\n\n  ngOnInit() {\n      this.item = (this.item == null) ? {id:0,topic:\"\",content:\"\",date:\"\"} : this.item;\n      console.log(this.item);\n    this.noteForm = this.formBuilder.group({\n      topic: new FormControl(this.item['topic'], Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])),\n      content: new FormControl(this.item['content'], Validators.compose([Validators.required])),\n      id: new FormControl(this.item['id'], Validators.compose([Validators.maxLength(5)])),\n      date: new FormControl(this.item['date'], Validators.compose([Validators.maxLength(30)]))\n    });\n  }\n}\n"]}