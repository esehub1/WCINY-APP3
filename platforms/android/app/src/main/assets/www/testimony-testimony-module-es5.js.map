{"version":3,"sources":["webpack:///src/app/testimony/testimony.page.html","webpack:///src/app/testimony/testimony-routing.module.ts","webpack:///src/app/testimony/testimony.module.ts","webpack:///src/app/testimony/testimony.page.scss","webpack:///src/app/testimony/testimony.page.ts"],"names":["routes","path","component","TestimonyPageRoutingModule","imports","forChild","exports","TestimonyPageModule","declarations","TestimonyPage","apiCall","toastCtrl","formBuilder","submitAttempt","testimonyForm","valid","console","log","postData","value","opt","approved","sendData","subscribe","data","presentToast","err","warn","message","msg","create","duration","position","toast","present","onDidDismiss","then","val","UserId","group","firstname","compose","maxLength","pattern","required","lastname","email","phone","testimony","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,0BAA0B;AAAA;AAAA,KAAvC;;AAAaA,8BAA0B,6DAJtC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIsC,GAA1BH,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMb,QAAaI,mBAAmB;AAAA;AAAA,KAAhC;;AAAaA,uBAAmB,6DAX/B,+DAAS;AACNH,aAAO,EAAE,CACL,4DADK,EAEL,0DAFK,EAGL,0DAHK,EAIL,oFAJK,EAKL,kEALK,EAML,sDANK,CADH;AASRI,kBAAY,EAAE,CAAC,6DAAD;AATN,KAAT,CAW+B,GAAnBD,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACtBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAaE,aAAa;AAKxB,6BAAoBC,OAApB,EAAmDC,SAAnD,EACmBC,WADnB,EAC6C;AAAA;;AADzB,aAAAF,OAAA,GAAAA,OAAA;AAA+B,aAAAC,SAAA,GAAAA,SAAA;AAChC,aAAAC,WAAA,GAAAA,WAAA;AAHnB,aAAAC,aAAA,GAAyB,KAAzB;AAGgD;;AANxB;AAAA;AAAA,+BAQpB;AAAA;;AACF,eAAKA,aAAL,GAAqB,IAArB;;AACA,cAAG,CAAC,KAAKC,aAAL,CAAmBC,KAAvB,EAA6B;AAC3BC,mBAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,WAFD,MAEM;AACJ;AACA,gBAAIC,QAAQ,GAAG,KAAKJ,aAAL,CAAmBK,KAAlC;AACAD,oBAAQ,CAACE,GAAT,GAAe,cAAf;AACAF,oBAAQ,CAACG,QAAT,GAAoB,CAApB;AACF;AACE;;AACA,iBAAKX,OAAL,CAAaY,QAAb,CAAsB,iBAAtB,EAAyCJ,QAAzC,EAAmD,IAAnD,EAAyDK,SAAzD,CACI,UAAAC,IAAI,EAAI;AACNR,qBAAO,CAACC,GAAR,CAAYO,IAAZ;;AACA,kBAAGA,IAAI,CAAC,QAAD,CAAJ,KAAmB,IAAtB,EAA2B;AACzB,qBAAI,CAACC,YAAL,CAAkB,+CAA6CD,IAAI,CAAC,mBAAD,CAAnE;AACD,eAFD,MAEK;AACH,qBAAI,CAACC,YAAL,CAAkB,kCAAlB;AACD;AAEF,aATL,EAUI,UAAAC,GAAG,EAAI;AAACV,qBAAO,CAACW,IAAR,CAAaD,GAAb;;AAAkB,mBAAI,CAACD,YAAL,CAAkB,wDAAsDC,GAAG,CAACE,OAA5E;AAAqF,aAVnH,EAWI;AAAA,qBAAMZ,OAAO,CAACC,GAAR,CAAY,gCAAZ,CAAN;AAAA,aAXJ;AAcD;AACF;AAlCuB;AAAA;AAAA,qCAoCLY,GApCK,EAoCA;;;;;;;;AAER,2BAAM,KAAKlB,SAAL,CAAemB,MAAf,CAAsB;AACxCF,6BAAO,EAAEC,GAD+B;AAExCE,8BAAQ,EAAE,IAF8B;AAGxCC,8BAAQ,EAAE;AAH8B,qBAAtB,CAAN;;;AAARC,yB;AAMNA,yBAAK,CAACC,OAAN;AACAD,yBAAK,CAACE,YAAN,GAAqBC,IAArB,CAA0B,UAACC,GAAD,EAAS;AACjCrB,6BAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,qBAFD;;;;;;;;;AAGD;AAhDuB;AAAA;AAAA,mCAkDb;AACT,cAAIqB,MAAM,GAAG,CAAb,CADS,CACM;;AACf,eAAKxB,aAAL,GAAqB,KAAKF,WAAL,CAAiB2B,KAAjB,CAAuB;AAC1CC,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,OAAX,CAAmB,CAAC,0DAAWC,SAAX,CAAqB,EAArB,CAAD,EAA2B,0DAAWC,OAAX,CAAmB,YAAnB,CAA3B,EAA6D,0DAAWC,QAAxE,CAAnB,CAApB,CAD+B;AAE1CC,oBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWJ,OAAX,CAAmB,CAAC,0DAAWC,SAAX,CAAqB,EAArB,CAAD,EAA2B,0DAAWC,OAAX,CAAmB,YAAnB,CAA3B,EAA6D,0DAAWC,QAAxE,CAAnB,CAApB,CAFgC;AAG1CE,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWL,OAAX,CAAmB,CAAC,0DAAWE,OAAX,CAAmB,4FAAnB,CAAD,EAAkH,0DAAWC,QAA7H,CAAnB,CAApB,CAHmC;AAI1CG,iBAAK,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWN,OAAX,CAAmB,CAAE,0DAAWG,QAAb,CAAnB,CAApB,CAJmC;AAK1CI,qBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWP,OAAX,CAAmB,CAAC,0DAAWG,QAAZ,CAAnB,CAApB,CAL+B;AAM1CvB,oBAAQ,EAAE,IAAI,0DAAJ,CAAgBiB,MAAhB,EAAwB,0DAAWG,OAAX,CAAmB,CAAC,0DAAWC,SAAX,CAAqB,EAArB,CAAD,CAAnB,CAAxB;AANgC,WAAvB,CAArB;AAQD;AA5DuB;;AAAA;AAAA,OAA1B;;;;cAK+B;;cAAiC;;cAC9B;;;;AANrBjC,iBAAa,6DALzB,gEAAU;AACTwC,cAAQ,EAAE,eADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kGAFS;;;;AAAA,KAAV,CAKyB,GAAbzC,aAAa,CAAb","file":"testimony-testimony-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"winners-red\\\">\\n    <ion-text>\\n      <div class=\\\"ion-text-wrap ion-text-end ion-padding\\\">\\n        WINNERS CHAPEL INT'L <br> NEW YORK\\n      </div>\\n    </ion-text>\\n    <ion-buttons slot=\\\"start\\\" style=\\\"flex-flow: column\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button text=\\\"Back\\\" icon=\\\"caret-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <img src=\\\"assets/img/logo22.png\\\" alt=\\\"\\\" slot=\\\"end\\\" width=\\\"70vw\\\" class=\\\"ion-padding-vertical ion-padding-end\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list class=\\\"remove-top\\\">\\n    <img class=\\\"middlelogo\\\" src=\\\"assets/img/testimony.png\\\" alt=\\\"\\\">\\n    <form [formGroup]=\\\"testimonyForm\\\">\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" >First Name:</ion-label>\\n        <ion-input formControlName=\\\"firstname\\\" type=\\\"text\\\" [class.invalid]=\\\"!testimonyForm.controls.firstname.valid && (testimonyForm.controls.firstname.dirty || submitAttempt)\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!testimonyForm.controls.firstname.valid  && (testimonyForm.controls.firstname.dirty || submitAttempt)\\\">\\n        <p>Please enter your first name.</p>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" >Last Name:</ion-label>\\n        <ion-input formControlName=\\\"lastname\\\" type=\\\"text\\\" [class.invalid]=\\\"!testimonyForm.controls.lastname.valid && (testimonyForm.controls.lastname.dirty || submitAttempt)\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!testimonyForm.controls.lastname.valid  && (testimonyForm.controls.lastname.dirty || submitAttempt)\\\">\\n        <p>Please enter your last name.</p>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Email:</ion-label>\\n        <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" [class.invalid]=\\\"!testimonyForm.controls.email.valid && (testimonyForm.controls.email.dirty || submitAttempt)\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!testimonyForm.controls.email.valid  && (testimonyForm.controls.email.dirty || submitAttempt)\\\">\\n        <p>Please enter a valid email address.</p>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" >Phone:</ion-label>\\n        <ion-input formControlName=\\\"phone\\\" [brmasker]=\\\"{mask: '(000)-000-0000', type:'num', len:14}\\\" type=\\\"tel\\\" [class.invalid]=\\\"!testimonyForm.controls.phone.valid && (testimonyForm.controls.phone.dirty || submitAttempt)\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!testimonyForm.controls.phone.valid  && (testimonyForm.controls.phone.dirty || submitAttempt)\\\">\\n        <p>Please enter your phone number.</p>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Testimonies:</ion-label>\\n        <ion-textarea autoGrow=\\\"true\\\" formControlName=\\\"testimony\\\" [class.invalid]=\\\"!testimonyForm.controls.testimony.valid && (testimonyForm.controls.testimony.dirty || submitAttempt)\\\"></ion-textarea>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!testimonyForm.controls.testimony.valid  && (testimonyForm.controls.testimony.dirty || submitAttempt)\\\">\\n        <p>Please enter your testimonies.</p>\\n      </ion-item>\\n      <ion-item [hidden]=\\\"true\\\">\\n        <ion-label position=\\\"floating\\\">UserId:</ion-label>\\n        <ion-input formControlName=\\\"approved\\\" type=\\\"text\\\"></ion-input>\\n      </ion-item>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <section>\\n            <ion-button color=\\\"winners-red\\\" expand=\\\"block\\\" slot=\\\"start\\\" (click)=\\\"save()\\\">\\n              Submit\\n            </ion-button>\\n          </section>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <section>\\n            <ion-button color=\\\"light\\\" expand=\\\"block\\\" slot=\\\"start\\\" [routerLink]=\\\"['','tabs']\\\" routerDirection=\\\"back\\\">\\n              Cancel\\n            </ion-button>\\n          </section>\\n        </ion-col>\\n      </ion-row>\\n\\n    </form>\\n  </ion-list>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestimonyPage } from './testimony.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestimonyPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestimonyPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestimonyPageRoutingModule } from './testimony-routing.module';\n\nimport { TestimonyPage } from './testimony.page';\nimport {BrMaskerModule} from \"br-mask\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        TestimonyPageRoutingModule,\n        ReactiveFormsModule,\n        BrMaskerModule\n    ],\n  declarations: [TestimonyPage]\n})\nexport class TestimonyPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RpbW9ueS90ZXN0aW1vbnkucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {DataService} from \"../services/data.service\";\nimport {ToastController} from \"@ionic/angular\";\n\n@Component({\n  selector: 'app-testimony',\n  templateUrl: './testimony.page.html',\n  styleUrls: ['./testimony.page.scss'],\n})\nexport class TestimonyPage implements OnInit {\n\n  testimonyForm: FormGroup;\n  submitAttempt: boolean = false;\n\n  constructor(private apiCall: DataService , private toastCtrl: ToastController,\n              public formBuilder: FormBuilder) { }\n\n  save(){\n    this.submitAttempt = true;\n    if(!this.testimonyForm.valid){\n      console.log(\"INVALID TESTIMONY FORM!\")\n    }else {\n      //console.log(this.testimonyForm.value);\n      let postData = this.testimonyForm.value;\n      postData.opt = 'testimonials';\n      postData.approved = 1;\n    /*  this.presentToast('Testimony successfully submitted');*/\n      // submit form details add addItem(userId)\n      this.apiCall.sendData('post/nubia/save', postData, true).subscribe(\n          data => {\n            console.log(data);\n            if(data['status'] === 'ko'){\n              this.presentToast('There was a problem with your submission: '+data['error_description'] );\n            }else{\n              this.presentToast('Testimony successfully submitted');\n            }\n\n          },\n          err => {console.warn(err);this.presentToast('There was an error with your Testimony submission: '+err.message)},\n          () => console.log(\"Testimony submission Completed\")\n      );\n\n    }\n  }\n\n  async presentToast(msg) {\n\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 5000,\n      position: 'middle'\n    });\n\n    toast.present();\n    toast.onDidDismiss().then((val) => {\n      console.log('Toast Dismissed');\n    });\n  }\n\n  ngOnInit() {\n    let UserId = 0;//localStorage.getItem(\"ProfileId\");\n    this.testimonyForm = this.formBuilder.group({\n      firstname: new FormControl('', Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])),\n      lastname: new FormControl('', Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])),\n      email: new FormControl('', Validators.compose([Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})'),Validators.required])),\n      phone: new FormControl('', Validators.compose([ Validators.required])),\n      testimony: new FormControl('', Validators.compose([Validators.required])),\n      approved: new FormControl(UserId, Validators.compose([Validators.maxLength(10)]))\n    });\n  }\n\n}\n"]}