{"version":3,"sources":["webpack:///src/app/feedback/feedback.page.html","webpack:///src/app/feedback/feedback-routing.module.ts","webpack:///src/app/feedback/feedback.module.ts","webpack:///src/app/feedback/feedback.page.scss","webpack:///src/app/feedback/feedback.page.ts"],"names":["routes","path","component","FeedbackPageRoutingModule","imports","forChild","exports","FeedbackPageModule","declarations","FeedbackPage","apiCall","toastCtrl","formBuilder","submitAttempt","feedbackForm","valid","console","log","value","postData","opt","sendData","subscribe","data","presentToast","reset","err","msg","create","message","duration","position","toast","present","onDidDismiss","then","val","UserId","group","firstname","compose","maxLength","pattern","required","lastname","email","phone","subject","selector","template"],"mappings":"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","file":"feedback-feedback-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"winners-red\\\">\\n    <ion-text>\\n      <div class=\\\"ion-text-wrap ion-text-end ion-padding\\\">\\n        WINNERS CHAPEL INT'L <br> NEW YORK\\n      </div>\\n    </ion-text>\\n    <ion-buttons slot=\\\"start\\\" style=\\\"flex-flow: column\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button text=\\\"Back\\\" icon=\\\"caret-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <img src=\\\"assets/img/logo22.png\\\" alt=\\\"\\\" slot=\\\"end\\\" width=\\\"70vw\\\" class=\\\"ion-padding-vertical ion-padding-end\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item color=\\\"light\\\">\\n    <div class=\\\"ion-text-left\\\">\\n      <h5 style=\\\"font-weight: bold\\\">FEEDBACK FORM</h5>\\n    </div>\\n  </ion-item>\\n  <ion-list class=\\\"remove-top\\\">\\n<!--    <img class=\\\"middlelogo\\\" src=\\\"assets/img/prayer.png\\\" alt=\\\"\\\">-->\\n    <form [formGroup]=\\\"feedbackForm\\\">\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\" >First Name:</ion-label>\\n            <ion-input formControlName=\\\"firstname\\\" type=\\\"text\\\" [class.invalid]=\\\"!feedbackForm.controls.firstname.valid && (feedbackForm.controls.firstname.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!feedbackForm.controls.firstname.valid  && (feedbackForm.controls.firstname.dirty || submitAttempt)\\\">\\n            <p>Please enter your first name.</p>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\" >Last Name:</ion-label>\\n            <ion-input formControlName=\\\"lastname\\\" type=\\\"text\\\" [class.invalid]=\\\"!feedbackForm.controls.lastname.valid && (feedbackForm.controls.lastname.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!feedbackForm.controls.lastname.valid  && (feedbackForm.controls.lastname.dirty || submitAttempt)\\\">\\n            <p>Please enter your last name.</p>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\">Email:</ion-label>\\n            <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" [class.invalid]=\\\"!feedbackForm.controls.email.valid && (feedbackForm.controls.email.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!feedbackForm.controls.email.valid  && (feedbackForm.controls.email.dirty || submitAttempt)\\\">\\n            <p>Please enter a valid email address.</p>\\n          </ion-item>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <ion-item>\\n            <ion-label position=\\\"stacked\\\" >Phone:</ion-label>\\n            <ion-input formControlName=\\\"phone\\\" [brmasker]=\\\"{mask: '(000)-000-0000', type:'num', len:14}\\\" type=\\\"tel\\\" [class.invalid]=\\\"!feedbackForm.controls.phone.valid && (feedbackForm.controls.phone.dirty || submitAttempt)\\\"></ion-input>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!feedbackForm.controls.phone.valid  && (feedbackForm.controls.phone.dirty || submitAttempt)\\\">\\n            <p>Please enter your phone number.</p>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\" >Subject:</ion-label>\\n        <ion-input formControlName=\\\"subject\\\" type=\\\"text\\\" [class.invalid]=\\\"!feedbackForm.controls.lastname.valid && (feedbackForm.controls.lastname.dirty || submitAttempt)\\\"></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!feedbackForm.controls.subject.valid  && (feedbackForm.controls.subject.dirty || submitAttempt)\\\">\\n        <p>Please enter subject.</p>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Message:</ion-label>\\n        <ion-textarea autoGrow=\\\"true\\\" formControlName=\\\"message\\\" [class.invalid]=\\\"!feedbackForm.controls.message.valid && (feedbackForm.controls.message.dirty || submitAttempt)\\\"></ion-textarea>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"!feedbackForm.controls.message.valid  && (feedbackForm.controls.message.dirty || submitAttempt)\\\">\\n        <p>Please enter your feedback message.</p>\\n      </ion-item>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          <section>\\n            <ion-button color=\\\"winners-red\\\" expand=\\\"block\\\" slot=\\\"start\\\" (click)=\\\"save()\\\">\\n              Submit\\n            </ion-button>\\n          </section>\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          <section>\\n            <ion-button color=\\\"light\\\" expand=\\\"block\\\" slot=\\\"start\\\" [routerLink]=\\\"['','tabs','contacts']\\\" routerDirection=\\\"back\\\">\\n              Cancel\\n            </ion-button>\\n          </section>\\n        </ion-col>\\n      </ion-row>\\n\\n    </form>\\n  </ion-list>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FeedbackPage } from './feedback.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeedbackPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeedbackPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FeedbackPageRoutingModule } from './feedback-routing.module';\n\nimport { FeedbackPage } from './feedback.page';\nimport {BrMaskerModule} from \"br-mask\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        FeedbackPageRoutingModule,\n        ReactiveFormsModule,\n        BrMaskerModule\n    ],\n  declarations: [FeedbackPage]\n})\nexport class FeedbackPageModule {}\n","export default \"p {\\n  font-size: 0.8em;\\n  color: #ea6153;\\n}\\n\\n.swiper-slide {\\n  display: block;\\n}\\n\\nion-label, .select-text {\\n  margin-left: 10px;\\n}\\n\\nion-input, ion-select, ion-textarea {\\n  padding: 5px 10px;\\n}\\n\\n.invalid {\\n  border: 1px solid #ea6153;\\n}\\n\\nsection {\\n  margin-top: 1em;\\n  margin-bottom: 2.5em;\\n}\\n\\nsection:not(.full-width),\\n.full-width > header {\\n  padding: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iYWJhdHVuZGUvRG9jdW1lbnRzL21vYmlsZS93Y2lueS9zcmMvYXBwL2ZlZWRiYWNrL2ZlZWRiYWNrLnBhZ2Uuc2NzcyIsInNyYy9hcHAvZmVlZGJhY2svZmVlZGJhY2sucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FDQ0Y7O0FERUE7RUFDRSxjQUFBO0FDQ0Y7O0FERUE7RUFDRSxpQkFBQTtBQ0NGOztBREVBO0VBRUUsaUJBQUE7QUNBRjs7QURHQTtFQUNFLHlCQUFBO0FDQUY7O0FERUE7RUFDRSxlQUFBO0VBQ0Esb0JBQUE7QUNDRjs7QURFQTs7RUFFRSxlQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9mZWVkYmFjay9mZWVkYmFjay5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgY29sb3I6ICNlYTYxNTM7XG59XG5cbi5zd2lwZXItc2xpZGUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuaW9uLWxhYmVsLCAuc2VsZWN0LXRleHQge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuaW9uLWlucHV0LCBpb24tc2VsZWN0LCBpb24tdGV4dGFyZWEge1xuICAvL2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xufVxuXG4uaW52YWxpZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlYTYxNTM7XG59XG5zZWN0aW9uIHtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAyLjVlbTtcbn1cblxuc2VjdGlvbjpub3QoLmZ1bGwtd2lkdGgpLFxuLmZ1bGwtd2lkdGggPiBoZWFkZXIge1xuICBwYWRkaW5nOiAwIDEwcHg7XG59XG4iLCJwIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgY29sb3I6ICNlYTYxNTM7XG59XG5cbi5zd2lwZXItc2xpZGUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuaW9uLWxhYmVsLCAuc2VsZWN0LXRleHQge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuaW9uLWlucHV0LCBpb24tc2VsZWN0LCBpb24tdGV4dGFyZWEge1xuICBwYWRkaW5nOiA1cHggMTBweDtcbn1cblxuLmludmFsaWQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjZWE2MTUzO1xufVxuXG5zZWN0aW9uIHtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAyLjVlbTtcbn1cblxuc2VjdGlvbjpub3QoLmZ1bGwtd2lkdGgpLFxuLmZ1bGwtd2lkdGggPiBoZWFkZXIge1xuICBwYWRkaW5nOiAwIDEwcHg7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {DataService} from \"../services/data.service\";\nimport {ToastController} from \"@ionic/angular\";\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.page.html',\n  styleUrls: ['./feedback.page.scss'],\n})\nexport class FeedbackPage implements OnInit {\n\n  feedbackForm: FormGroup;\n  submitAttempt: boolean = false;\n\n  constructor(private apiCall: DataService, private toastCtrl: ToastController,\n              public formBuilder: FormBuilder) {\n  }\n\n  save() {\n    this.submitAttempt = true;\n    if (!this.feedbackForm.valid) {\n      console.log(\"INVALID FEEDBACK FORM!\")\n    } else {\n      console.log(this.feedbackForm.value);\n      let postData = this.feedbackForm.value;\n      postData.opt = 'feedback';\n      /*      this.presentToast('Prayer request successfully submitted');*/\n      // submit form details add addItem(userId)\n      this.apiCall.sendData('post/nubia/save', postData, true).subscribe(\n          data => {\n            console.log(data);\n            if (data['status'] === 'ko') {\n              this.presentToast('There was a problem with your submission: ' + data['error_description']);\n            } else {\n              this.presentToast('Feedback successfully submitted');\n              this.feedbackForm.reset();\n            }\n          },\n          err => this.presentToast('There was an error with your Prayer request submission: ' + err),\n          () => console.log(\"Feedback submission Completed\")\n      );\n\n    }\n  }\n\n  async presentToast(msg) {\n\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 3000,\n      position: 'middle'\n    });\n\n    toast.present();\n    toast.onDidDismiss().then((val) => {\n      console.log('Toast Dismissed');\n    });\n  }\n\n  ngOnInit() {\n    let UserId = 0;//localStorage.getItem(\"ProfileId\");\n    this.feedbackForm = this.formBuilder.group({\n      firstname: new FormControl('', Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])),\n      lastname: new FormControl('', Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])),\n      email: new FormControl('', Validators.compose([Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})'), Validators.required])),\n      phone: new FormControl('', Validators.compose([Validators.required])),\n      subject: new FormControl('', Validators.compose([Validators.required])),\n      message: new FormControl('', Validators.compose([Validators.required]))\n    });\n  }\n}\n"]}