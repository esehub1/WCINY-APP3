{"version":3,"sources":["webpack:///src/app/wincare/wincare.page.html","webpack:///src/app/wincare/wincare-routing.module.ts","webpack:///src/app/wincare/wincare.module.ts","webpack:///src/app/wincare/wincare.page.scss","webpack:///src/app/wincare/wincare.page.ts"],"names":["routes","path","component","WincarePageRoutingModule","imports","forChild","exports","WincarePageModule","declarations","WincarePage","nCtrl","toastCtrl","apiCall","formBuilder","submitAttempt","wincareForm","valid","console","log","value","postData","Situation","join","opt","sendData","subscribe","data","presentToast","reset","err","msg","create","message","duration","position","toast","present","onDidDismiss","then","val","group","Fname","compose","maxLength","pattern","required","Lname","Email","Phone","Address","City","State","Zip","Country","Gender","Member","selector","template"],"mappings":"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","file":"wincare-wincare-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar color=\\\"winners-red\\\">\\n        <ion-text>\\n            <div class=\\\"ion-text-wrap ion-text-end ion-padding\\\">\\n                WINNERS CHAPEL INT'L <br> NEW YORK\\n            </div>\\n        </ion-text>\\n        <ion-buttons slot=\\\"start\\\" style=\\\"flex-flow: column\\\">\\n            <ion-menu-button></ion-menu-button>\\n            <ion-back-button text=\\\"Back\\\" icon=\\\"caret-back\\\"></ion-back-button>\\n        </ion-buttons>\\n        <img src=\\\"assets/img/logo22.png\\\" alt=\\\"\\\" slot=\\\"end\\\" width=\\\"70vw\\\" class=\\\"ion-padding-vertical ion-padding-end\\\">\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-item color=\\\"light\\\">\\n        <div class=\\\"ion-text-left\\\">\\n            <h5 style=\\\"font-weight: bold\\\">WINNERS CARE PROGRAM</h5>\\n        </div>\\n    </ion-item>\\n    <ion-list>\\n        <form [formGroup]=\\\"wincareForm\\\">\\n                <ion-row>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">First Name:</ion-label>\\n                            <ion-input formControlName=\\\"Fname\\\" type=\\\"text\\\"\\n                                       [class.invalid]=\\\"!wincareForm.controls.Fname.valid && (wincareForm.controls.Fname.dirty || submitAttempt)\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.Fname.valid  && (wincareForm.controls.Fname.dirty || submitAttempt)\\\">\\n                            <p>Please enter a valid name.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Last Name:</ion-label>\\n                            <ion-input formControlName=\\\"Lname\\\" type=\\\"text\\\"\\n                                       [class.invalid]=\\\"!wincareForm.controls.Lname.valid && (wincareForm.controls.Lname.dirty || submitAttempt)\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.Lname.valid  && (wincareForm.controls.Lname.dirty || submitAttempt)\\\">\\n                            <p>Please enter a valid name.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Telephone:</ion-label>\\n                            <ion-input formControlName=\\\"Phone\\\" type=\\\"tel\\\"\\n                                       [brmasker]=\\\"{mask: '(000)-000-0000', type:'num', len:14}\\\"\\n                                       [class.invalid]=\\\"!wincareForm.controls.Phone.valid && (wincareForm.controls.Phone.dirty || submitAttempt)\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.Phone.valid  && (wincareForm.controls.Phone.dirty || submitAttempt)\\\">\\n                            <p>Please enter a valid phone number.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Email:</ion-label>\\n                            <ion-input formControlName=\\\"Email\\\" type=\\\"email\\\"\\n                                       [class.invalid]=\\\"!wincareForm.controls.Email.valid && (wincareForm.controls.Email.dirty || submitAttempt)\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.Email.valid  && (wincareForm.controls.Email.dirty || submitAttempt)\\\">\\n                            <p>Please enter a valid email address.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                </ion-row>\\n\\n\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Address:</ion-label>\\n                    <ion-input formControlName=\\\"Address\\\" type=\\\"text\\\"\\n                               [class.invalid]=\\\"!wincareForm.controls.Address.valid && (wincareForm.controls.Address.dirty || submitAttempt)\\\"></ion-input>\\n                </ion-item>\\n                <ion-item\\n                        *ngIf=\\\"!wincareForm.controls.Address.valid  && (wincareForm.controls.Address.dirty || submitAttempt)\\\">\\n                    <p>Please enter a valid address.</p>\\n                </ion-item>\\n                <ion-row>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">City:</ion-label>\\n                            <ion-input formControlName=\\\"City\\\" type=\\\"text\\\"\\n                                       [class.invalid]=\\\"!wincareForm.controls.City.valid && (wincareForm.controls.City.dirty || submitAttempt)\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.City.valid  && (wincareForm.controls.City.dirty || submitAttempt)\\\">\\n                            <p>Please enter a valid city.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">State:</ion-label>\\n                            <ion-input formControlName=\\\"State\\\" type=\\\"text\\\"\\n                                       [class.invalid]=\\\"!wincareForm.controls.State.valid && (wincareForm.controls.State.dirty || submitAttempt)\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.State.valid  && (wincareForm.controls.State.dirty || submitAttempt)\\\">\\n                            <p>Please enter a valid state / province.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Zip code:</ion-label>\\n                            <ion-input formControlName=\\\"Zip\\\" type=\\\"text\\\"\\n                                       [class.invalid]=\\\"!wincareForm.controls.Zip.valid && (wincareForm.controls.Zip.dirty || submitAttempt)\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.Zip.valid  && (wincareForm.controls.Zip.dirty || submitAttempt)\\\">\\n                            <p>Please enter a valid zip code.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Country:</ion-label>\\n                            <ion-input formControlName=\\\"Country\\\" type=\\\"text\\\"\\n                                       [class.invalid]=\\\"!wincareForm.controls.Country.valid && (wincareForm.controls.Country.dirty || submitAttempt)\\\"></ion-input>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.Country.valid  && (wincareForm.controls.Country.dirty || submitAttempt)\\\">\\n                            <p>Please enter a country.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\" class=\\\"ion-text-wrap\\\"\\n                                       style=\\\"margin-bottom: 10px\\\">Member?\\n                            </ion-label>\\n                            <ion-select formControlName=\\\"Member\\\" interface=\\\"action-sheet\\\">\\n                                <ion-select-option value=\\\"Yes\\\">Yes</ion-select-option>\\n                                <ion-select-option value=\\\"No\\\">No</ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.Member.valid  && (wincareForm.controls.Member.dirty || submitAttempt)\\\">\\n                            <p>Please select an option.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                    <ion-col size=\\\"6\\\">\\n                        <ion-item>\\n                            <ion-label position=\\\"stacked\\\" color=\\\"primary\\\" class=\\\"ion-text-wrap\\\"\\n                                       style=\\\"margin-bottom: 10px\\\">Gender\\n                            </ion-label>\\n                            <ion-select formControlName=\\\"Gender\\\" interface=\\\"action-sheet\\\">\\n                                <ion-select-option value=\\\"Male\\\">Male</ion-select-option>\\n                                <ion-select-option value=\\\"Female\\\">Female</ion-select-option>\\n                            </ion-select>\\n                        </ion-item>\\n                        <ion-item\\n                                *ngIf=\\\"!wincareForm.controls.Gender.valid  && (wincareForm.controls.Gender.dirty || submitAttempt)\\\">\\n                            <p>Please select an option.</p>\\n                        </ion-item>\\n                    </ion-col>\\n                </ion-row>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\" color=\\\"primary\\\" class=\\\"ion-text-wrap\\\" style=\\\"margin-bottom: 10px\\\">\\n                        Situation\\n                    </ion-label>\\n                    <ion-select formControlName=\\\"Situation\\\" interface=\\\"action-sheet\\\" multiple=\\\"true\\\">\\n                        <ion-select-option value=\\\"Widower\\\">Widow(er)</ion-select-option>\\n                        <ion-select-option value=\\\"Senior Citizen (65yrs and above)\\\">Senior Citizen (65yrs and above)\\n                        </ion-select-option>\\n                        <ion-select-option value=\\\"Single Parent\\\">Single Parent</ion-select-option>\\n                        <ion-select-option value=\\\"Student Visa\\\">Student Visa</ion-select-option>\\n                        <ion-select-option value=\\\"Low Income\\\">Low Income</ion-select-option>\\n                        <ion-select-option value=\\\"Unemployment\\\">Unemployment</ion-select-option>\\n                        <ion-select-option value=\\\"Undocumented\\\">Undocumented</ion-select-option>\\n                        <ion-select-option value=\\\"Other\\\">Other</ion-select-option>\\n\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item\\n                        *ngIf=\\\"!wincareForm.controls.Situation.valid  && (wincareForm.controls.Situation.dirty || submitAttempt)\\\">\\n                    <p>Please select one or more option(s).</p>\\n                </ion-item>\\n                <section>\\n                    <ion-button color=\\\"winners-red\\\" expand=\\\"block\\\" slot=\\\"start\\\" (click)=\\\"save()\\\">\\n                        Submit\\n                    </ion-button>\\n                </section>\\n        </form>\\n    </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { WincarePage } from './wincare.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WincarePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WincarePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { WincarePageRoutingModule } from './wincare-routing.module';\n\nimport { WincarePage } from './wincare.page';\nimport {BrMaskerModule} from \"br-mask\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        WincarePageRoutingModule,\n        ReactiveFormsModule,\n        BrMaskerModule\n    ],\n  declarations: [WincarePage]\n})\nexport class WincarePageModule {}\n","export default \"p {\\n  font-size: 0.8em;\\n  color: #d2d2d2;\\n}\\n\\n.swiper-slide {\\n  display: block;\\n}\\n\\nion-label, .select-text {\\n  margin-left: 10px;\\n}\\n\\nion-input, ion-select, ion-textarea {\\n  padding: 5px 10px;\\n}\\n\\n.invalid {\\n  border: 1px solid #ea6153;\\n}\\n\\np {\\n  color: #ea6153;\\n}\\n\\nsection {\\n  margin-top: 1em;\\n  margin-bottom: 2.5em;\\n}\\n\\nsection:not(.full-width),\\n.full-width > header {\\n  padding: 0 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iYWJhdHVuZGUvRG9jdW1lbnRzL21vYmlsZS93Y2lueS9zcmMvYXBwL3dpbmNhcmUvd2luY2FyZS5wYWdlLnNjc3MiLCJzcmMvYXBwL3dpbmNhcmUvd2luY2FyZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLGNBQUE7QUNDRjs7QURFQTtFQUNFLGNBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0FDQ0Y7O0FERUE7RUFFRSxpQkFBQTtBQ0FGOztBREdBO0VBQ0UseUJBQUE7QUNBRjs7QURFQTtFQUNFLGNBQUE7QUNDRjs7QURDQTtFQUNFLGVBQUE7RUFDQSxvQkFBQTtBQ0VGOztBRENBOztFQUVFLGVBQUE7QUNFRiIsImZpbGUiOiJzcmMvYXBwL3dpbmNhcmUvd2luY2FyZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgY29sb3I6ICNkMmQyZDI7XG59XG5cbi5zd2lwZXItc2xpZGUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuaW9uLWxhYmVsLCAuc2VsZWN0LXRleHQge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbn1cblxuaW9uLWlucHV0LCBpb24tc2VsZWN0LCBpb24tdGV4dGFyZWEge1xuICAvL2JhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xufVxuXG4uaW52YWxpZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlYTYxNTM7XG59XG5we1xuICBjb2xvcjogI2VhNjE1Mztcbn1cbnNlY3Rpb24ge1xuICBtYXJnaW4tdG9wOiAxZW07XG4gIG1hcmdpbi1ib3R0b206IDIuNWVtO1xufVxuXG5zZWN0aW9uOm5vdCguZnVsbC13aWR0aCksXG4uZnVsbC13aWR0aCA+IGhlYWRlciB7XG4gIHBhZGRpbmc6IDAgMTBweDtcbn1cbiIsInAge1xuICBmb250LXNpemU6IDAuOGVtO1xuICBjb2xvcjogI2QyZDJkMjtcbn1cblxuLnN3aXBlci1zbGlkZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5pb24tbGFiZWwsIC5zZWxlY3QtdGV4dCB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG5pb24taW5wdXQsIGlvbi1zZWxlY3QsIGlvbi10ZXh0YXJlYSB7XG4gIHBhZGRpbmc6IDVweCAxMHB4O1xufVxuXG4uaW52YWxpZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlYTYxNTM7XG59XG5cbnAge1xuICBjb2xvcjogI2VhNjE1Mztcbn1cblxuc2VjdGlvbiB7XG4gIG1hcmdpbi10b3A6IDFlbTtcbiAgbWFyZ2luLWJvdHRvbTogMi41ZW07XG59XG5cbnNlY3Rpb246bm90KC5mdWxsLXdpZHRoKSxcbi5mdWxsLXdpZHRoID4gaGVhZGVyIHtcbiAgcGFkZGluZzogMCAxMHB4O1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {ToastController} from \"@ionic/angular\";\nimport {DataService} from \"../services/data.service\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-wincare',\n  templateUrl: './wincare.page.html',\n  styleUrls: ['./wincare.page.scss'],\n})\nexport class WincarePage implements OnInit {\n  wincareForm: FormGroup;\n  submitAttempt: boolean = false;\n\n  constructor(private  nCtrl:  Router, private toastCtrl: ToastController,\n              private apiCall: DataService, public formBuilder: FormBuilder) { }\n\n  save(){\n    this.submitAttempt = true;\n    if(!this.wincareForm.valid){\n      console.log(\"INVALID WINCARE FORM!\")\n    }else {\n      console.log(this.wincareForm.value);\n      let postData = this.wincareForm.value;\n      postData.Situation = postData.Situation.join(\"|\");\n      postData.opt = 'wincare';\n      console.log(postData);\n      /*      this.presentToast('Prayer request successfully submitted');*/\n      // submit form details add addItem(userId)\n            this.apiCall.sendData('post/nubia/save', postData, true).subscribe(\n                data => {\n                  console.log(data);\n                  if(data['status'] === 'ko'){\n                    this.presentToast('There was a problem with your submission: '+data['error_description'] );\n                  }else{\n                    this.presentToast('Winners Care Program Form successfully submitted');\n                    this.wincareForm.reset();\n                  }\n                },\n                err => this.presentToast('There was an error with your Winners Care Program submission: '+err),\n                () => console.log(\"Winners Care Program submission Completed\")\n            );\n    }\n  }\n\n  async presentToast(msg) {\n\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 3000,\n      position: 'middle'\n    });\n\n    await toast.present();\n    toast.onDidDismiss().then((val) => {\n      console.log('Toast Dismissed '+ val);\n    });\n  }\n\n  ngOnInit() {\n    this.wincareForm = this.formBuilder.group({\n      Fname: new FormControl(\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])),\n      Lname: new FormControl(\"\", Validators.compose([Validators.maxLength(30), Validators.pattern('[a-zA-Z ]*'), Validators.required])),\n      Email: new FormControl(\"\",  Validators.compose([Validators.pattern('[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})'),Validators.required])),\n      Phone: new FormControl(\"\", Validators.compose([Validators.required])),\n      Address: new FormControl(\"\", Validators.compose([ Validators.required, Validators.maxLength(300)])),\n      City: new FormControl(\"\", Validators.compose([Validators.required, Validators.maxLength(30)])),\n      State: new FormControl(\"\", Validators.compose([Validators.required, Validators.maxLength(100)])),\n      Zip: new FormControl(\"\", Validators.compose([Validators.required, Validators.maxLength(10)])),\n      Country: new FormControl(\"\", Validators.compose([Validators.required, Validators.maxLength(100)])),\n      Gender: new FormControl(\"\", Validators.compose([Validators.required])),\n      Member: new FormControl(\"\", Validators.compose([Validators.required])),\n      Situation: new FormControl(\"\", Validators.compose([Validators.required]))\n    });\n  }\n\n}\n"]}