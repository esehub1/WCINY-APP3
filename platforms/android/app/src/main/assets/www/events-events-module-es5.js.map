{"version":3,"sources":["webpack:///src/app/events/events.page.html","webpack:///src/app/events/events-routing.module.ts","webpack:///src/app/events/events.module.ts","webpack:///src/app/events/events.page.scss","webpack:///src/app/events/events.page.ts"],"names":["routes","path","component","EventsPageRoutingModule","imports","forChild","exports","EventsPageModule","declarations","EventsPage","navCtrl","apiCall","infoService","showEvent","a","e","getFullYear","getMonth","getDate","params","fetchData","subscribe","data","Array","isArray","length","console","log","eventList","err","error","CurrentDate","Date","dates","setMonth","getEvents","str","replace","d","t","slice","split","join","days","strDate","getDay","months","item","setData","id","navigateByUrl","selector","template"],"mappings":"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","file":"events-events-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"winners-red\\\">\\n    <ion-text>\\n      <div class=\\\"ion-text-wrap ion-text-end ion-padding\\\">\\n        WINNERS CHAPEL INT'L <br> NEW YORK\\n      </div>\\n    </ion-text>\\n    <ion-buttons slot=\\\"start\\\" style=\\\"flex-flow: column\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button text=\\\"Back\\\" icon=\\\"caret-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <img src=\\\"assets/img/logo22.png\\\" alt=\\\"\\\" slot=\\\"end\\\" width=\\\"70vw\\\" class=\\\"ion-padding-vertical ion-padding-end\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list class=\\\"remove-top\\\">\\n    <img class=\\\"middlelogo\\\" src=\\\"assets/img/events_side.jpg\\\" alt=\\\"\\\">\\n    <ion-item color=\\\"light\\\">\\n      <ion-button fill=\\\"clear\\\" (click)='goBack()'>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"caret-back-circle-outline\\\" color=\\\"dark\\\"></ion-icon>\\n      </ion-button>\\n      <div class=\\\"ion-text-center center-me\\\">\\n        <h4>{{getMon(dates) +' '+dates.getFullYear()}}</h4>\\n      </div>\\n      <ion-button slot=\\\"end\\\" fill=\\\"clear\\\" (click)='goNext()'>\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"caret-forward-circle-outline\\\" color=\\\"dark\\\"></ion-icon>\\n      </ion-button>\\n    </ion-item>\\n    <div *ngIf=\\\"showEvent\\\">\\n      <ion-item *ngFor=\\\"let item of eventList\\\" class=\\\"card item-avatar item-text-wrap\\\" (click)=\\\"itemTapped(item)\\\">\\n        <!-- <img ng-src=\\\"http://7thcolonnade.com/{{item.imageSmall}}\\\" alt=\\\"{{item.name}} Photo\\\"> -->\\n        <ion-avatar slot=\\\"start\\\">\\n          <bj-avatar  charcount=\\\"3\\\" height=\\\"100px\\\" width=\\\"100px\\\" numdata=\\\"{{getNum(item.event_date)}}\\\" textdata=\\\"{{getDay(item.event_date)}}\\\" shape=\\\"round\\\"></bj-avatar>\\n        </ion-avatar>\\n        <ion-label>\\n        <h4>{{item.title}}</h4>\\n        <h4>When: {{doDate(item.event_date, item.event_time)  | date:'short' }}</h4>\\n        <h4>Where: {{item.event_venue}}</h4>\\n        </ion-label>\\n      </ion-item>\\n    </div>\\n    <ion-item *ngIf=\\\"!showEvent\\\"  >\\n      <h3 style=\\\"text-align:center;\\\">There are no events to show</h3>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventsPage } from './events.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventsPageRoutingModule } from './events-routing.module';\nimport { SharedModule } from \"../shared.module\";\nimport { EventsPage } from './events.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EventsPageRoutingModule,\n      SharedModule\n  ],\n  declarations: [EventsPage]\n})\nexport class EventsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50cy9ldmVudHMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from \"../services/data.service\";\nimport {InfoService} from \"../services/info.service\";\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.page.html',\n  styleUrls: ['./events.page.scss'],\n})\nexport class EventsPage implements OnInit {\n\n  public eventList;\n  public dates;\n  public showEvent = true;\n  //selectedItem : any;\n  constructor(private navCtrl: Router, private apiCall: DataService, private infoService: InfoService) {}\n\n  getEvents(a){\n    //let ld = new Date(a.getFullYear(), a.getMonth() + 1, 0);\n    //let s = a.getFullYear() + '-' + (a.getMonth() + 1) + '-1';\n    let e = a.getFullYear() + '-' + (a.getMonth() + 1) + '-' + a.getDate();\n    let params ='cats=2&type=event&start='+e;\n    this.apiCall.fetchData('get/k2/items/',params,false).subscribe(\n        data => {\n          this.showEvent = !!(Array.isArray(data['items']) && data['items'].length > 0);\n          console.log(this.showEvent);\n          this.eventList = data['items'];//this.normalize(data['items']);\n          console.log(data['items']);\n        },\n        err => console.error(err),\n        () => console.log('Fetch Ministries Completed')\n    );\n\n  }\n\ngoNext() {\n  this.eventList = [];\n  let CurrentDate = new Date(this.dates);\n  CurrentDate.setMonth(CurrentDate.getMonth() + 1);\n  this.dates = CurrentDate;\n  this.getEvents(CurrentDate);\n  console.log(CurrentDate);\n}\n\ngoBack() {\n  this.eventList = [];\n  let CurrentDate = new Date(this.dates);\n  CurrentDate.setMonth(CurrentDate.getMonth() - 1);\n  this.dates = CurrentDate;\n  this.getEvents(CurrentDate);\n}\n\ndoHTML(str){\n  return str.replace(/<(?:.|\\n)*?>/gm, '');\n}\n\ndoDate (d, t){\n    console.log(d);\n  let str = d.slice(0,10)+' '+t;\n  return new Date(str.split(\"-\").join(\"/\"));\n}\n\ngetDay(str){\n  let days = ['SUNDAY', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n  let strDate = (str instanceof Date)? str : new Date(str);\n  return days[strDate.getDay()];\n}\n\ngetMon(str){\n  let strDate = (str instanceof Date)? str : new Date(str);\n  let months = ['JANUARY', 'FEBRUARY', 'MARCH', 'APRIL', 'MAY', 'JUNE', 'JULY', 'AUGUST', 'SEPTEMBER', 'OCTOBER', 'NOVEMBER', 'DECEMBER'];\n  return months[strDate.getMonth()];\n}\n\n\ngetNum(str){\n  let strDate = (str instanceof Date)? str : new Date(str);\n  return strDate.getDate();\n}\n\nitemTapped(item){\n  this.infoService.setData(item.id, item);\n  this.navCtrl.navigateByUrl('/event/'+item.id);\n}\n\n  ngOnInit() {\n    this.dates = new Date();\n    this.getEvents(new Date());\n  }\n}\n"]}