{"version":3,"sources":["webpack:///src/app/notification/notification.page.html","webpack:///src/app/notification/notification-routing.module.ts","webpack:///src/app/notification/notification.module.ts","webpack:///src/app/notification/notification.page.scss","webpack:///src/app/notification/notification.page.ts"],"names":["routes","path","component","NotificationPageRoutingModule","imports","forChild","exports","NotificationPageModule","declarations","NotificationPage","storage","push","apiCall","env","get","then","data","console","log","itemList","JSON","parse","item","set","stringify","profile","idKey","val","length","obj","filter","o","save","t","Object","keys","i","s","values","forEach","v","dKey","dVal","id","Enabled","checked","Group_Name","subscribeToTopic","replace","unsubscribeFromTopic","getItems","selector","template"],"mappings":"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","file":"notification-notification-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"winners-red\\\">\\n    <ion-text>\\n      <div class=\\\"ion-text-wrap ion-text-end ion-padding\\\">\\n        WINNERS CHAPEL INT'L <br> NEW YORK\\n      </div>\\n    </ion-text>\\n    <ion-buttons slot=\\\"start\\\" style=\\\"flex-flow: column\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button text=\\\"Back\\\" icon=\\\"caret-back\\\"></ion-back-button>\\n    </ion-buttons>\\n    <img src=\\\"assets/img/logo22.png\\\" alt=\\\"\\\" slot=\\\"end\\\" width=\\\"70vw\\\" class=\\\"ion-padding-vertical ion-padding-end\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list class=\\\"remove-top\\\">\\n    <img class=\\\"middlelogo\\\" src=\\\"assets/img/communion.jpg\\\" alt=\\\"\\\">\\n    <ion-item color=\\\"light\\\">\\n      <div class=\\\"ion-text-center center-me\\\">\\n        <h4>Subscribe to be notified</h4>\\n      </div>\\n    </ion-item>\\n    <ion-item *ngFor=\\\"let i of itemList\\\">\\n      <ion-label>{{getValue(i,'Group_Name')}}</ion-label>\\n      <ion-toggle checked=\\\"{{getValue(i,'Enabled')}}\\\" color=\\\"winners-red\\\" (ionChange)=\\\" onToggleChange(i,$event.detail)\\\"></ion-toggle>\\n    </ion-item>\\n\\n  </ion-list>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationPage } from './notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationPageRoutingModule } from './notification-routing.module';\n\nimport { NotificationPage } from './notification.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationPageRoutingModule\n  ],\n  declarations: [NotificationPage]\n})\nexport class NotificationPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport {DataService} from \"../services/data.service\";\nimport {Storage} from \"@ionic/storage\";\nimport { FCM } from \"cordova-plugin-fcm-with-dependecy-updated/ionic/ngx\";\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.page.html',\n  styleUrls: ['./notification.page.scss'],\n})\nexport class NotificationPage implements OnInit {\n  itemList\n  profile\n  constructor(private storage: Storage, private push: FCM, private apiCall: DataService) { }\n\n  getItems(){\n    let env = this;\n    this.storage.get('pushSettings')\n        .then( function (data) {\n          console.log(data);\n          env.itemList = JSON.parse(data);//).filter( x => typeof x === 'object');/\n         // env.itemList = this.parseAddKey(JSON.parse(data));\n          console.log(env.itemList);\n        });\n  }\n  parseAddKey(item){\n    //Object.keys(item).\n    //return item[Object.keys(item)[0]];\n\n  }\n\n  save() {\n    /*this.nativeStorage.setItem('profile', JSON.stringify(this.items));*/\n    this.storage.set('profile', JSON.stringify(this.profile));\n  }\n\n  addItem(idKey,val) {\n    if (this.profile.length > 0){\n      let obj = this.profile.filter(function (o) { return o[idKey] })[0];\n      console.log(obj);\n      if(typeof obj !== 'undefined'){\n        if (obj[idKey] !== val && idKey !== 'pushSettings') this.profile.push({[idKey] : val});\n      }else{\n        this.profile.push({[idKey] : val});\n      }\n    }else{\n      this.profile.push({[idKey] : val});\n    }\n    console.log(this.profile);\n    this.save();\n  }\n\n  getValue(item,t){\n    //console.log(item[Object.keys(item)[0]][t])\n    return item[Object.keys(item)[0]][t];\n  }\n\n  onToggleChange(i,s){\n    Object.values(this.itemList).forEach((v)=>{\n      let dKey = Object.keys(v)[0]\n     let dVal = v[dKey]\n      if (dVal.id === Object.keys(i)[0]) {\n        dVal.Enabled = s.checked\n        this.storage.set('pushSettings', JSON.stringify(this.itemList)).then(()=>{\n          console.log(dVal.Group_Name);\n          (s.checked) ? this.push.subscribeToTopic(dVal.Group_Name.replace(/\\s/g, \"-\")) : this.push.unsubscribeFromTopic(dVal.Group_Name.replace(/\\s/g, \"-\"));\n        });\n      }\n    })\n  }\n\n  ngOnInit() {\n  this.getItems()\n  }\n\n}\n"]}